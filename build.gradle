plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'checkstyle'
    id 'jacoco'
}

group = 'kr.bos'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/checkstyle/google-checkstyle.xml")
    showViolations = true
    toolVersion = "8.45"
}

task preCheckStyle() {
    copy {
        from "./githooks/pre-commit"
        into "./.git/hooks"
    }
}

checkstyleMain.dependsOn preCheckStyle

repositories {
    mavenCentral()
}

// CheckStyle Configurations
checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/checkstyle/google-checkstyle.xml")
    showViolations = true
    toolVersion = "8.45"
}

task preCheckStyle() {
    copy {
        from "./githooks/pre-commit"
        into "./.git/hooks"
    }
}

checkstyleMain.dependsOn preCheckStyle

// Jacoco Configuration
def jacocoExcludes = [
    '**/BosApplication.class',
    '**/controller'
]

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false

        afterEvaluate {
            getClassDirectories().setFrom(classDirectories.files.collect {
                fileTree(dir: it, exclude: jacocoExcludes)
            })
        }
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                minimum = 1.0
            }
        }
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                minimum = 1.0
            }
        }
    }
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludes)
        })
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0'
    testImplementation "org.testcontainers:junit-jupiter:1.16.2"
    testImplementation "org.testcontainers:testcontainers:1.15.3"
    testImplementation 'org.testcontainers:mysql:1.16.2'
    testImplementation 'org.testcontainers:spock:1.15.3'
    testImplementation 'org.spockframework:spock-spring:2.0-groovy-3.0'
}

test {
    useJUnitPlatform()
}