<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.bos.mapper.StudyCafeMapper">

  <insert id="insertStudyCafe" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO study_cafes (user_id, title, address, thumbnail)
    VALUES (#{userId}, #{title}, #{address}, #{thumbnail})
  </insert>

  <delete id="deleteBookmark" parameterType="long" >
    DELETE FROM bookmarks
    WHERE user_id = #{userId} AND study_cafe_id = #{studyCafeId}
  </delete>

  <insert id="insertBookmark" parameterType="long">
    INSERT INTO bookmarks (user_id, study_cafe_id)
    SELECT #{userId}, #{studyCafeId}
    WHERE NOT EXISTS
    (
      SELECT id FROM bookmarks
      WHERE user_id = #{userId} AND study_cafe_id = #{studyCafeId}
    ) FOR UPDATE
  </insert>

  <select id="isBlockUser" resultType="boolean" parameterType="long">
    SELECT EXISTS
    (
      SELECT id FROM blacklist
      WHERE user_id = #{userId} AND study_cafe_id = #{studyCafeId}
    )
  </select>

  <resultMap id="studyCafe" type="kr.bos.domain.StudyCafe">
    <result property="id" column="id"/>
    <result property="userId" column="user_id"/>
    <result property="title" column="title"/>
    <result property="address" column="address"/>
    <result property="thumbnail" column="thumbnail"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
  </resultMap>

  <select id="getStudyCafeById" resultMap="studyCafe">
    SELECT id, user_id, title, address, thumbnail, created_at, updated_at
    FROM STUDY_CAFES
    WHERE id=#{id}
  </select>

  <select id="getStudyCafesByKeyword" resultMap="studyCafe">
    SELECT id, user_id, title, address, thumbnail, created_at, updated_at
    FROM STUDY_CAFES
    WHERE title LIKE CONCAT('%', #{name}, '%')
  </select>
  <select id="getStudyCafeIdByName" resultType="java.lang.Long">
    SELECT id FROM STUDY_CAFES WHERE title=#{name}
  </select>

  <update id="updateStudyCafe" parameterType="kr.bos.model.domain.StudyCafe">
    UPDATE STUDY_CAFES SET id=#{id}, user_id=#{userId}, title=#{title}, address=#{address},
                           thumbnail=#{thumbnail}, updated_at=NOW()
    WHERE id=#{id}
  </update>

  <delete id="deleteStudyCafe" parameterType="int">
    DELETE STUDY_CAFES FROM STUDY_CAFES WHERE id=#{id}
  </delete>
</mapper>
